AWSTemplateFormatVersion: 2010-09-09
Description: Former2 (https://github.com/aws-samples/ec2-former2) (uksb-1nfhpgkj2i) (tag:AL2)
Transform: "AWS::LanguageExtensions"

Metadata:
  License:
    Description: >
      Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
      SPDX-License-Identifier: MIT-0

      Permission is hereby granted, free of charge, to any person obtaining a copy of this
      software and associated documentation files (the "Software"), to deal in the Software
      without restriction, including without limitation the rights to use, copy, modify,
      merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
      permit persons to whom the Software is furnished to do so.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
      INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
      PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
      HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
      OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
      SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: EC2
        Parameters:
          - ec2Name
          - processorArchitecture
          - instanceType
      - Label:
          default: Network
        Parameters:
          - vpcID
          - subnetID
          - displayPublicIP
          - assignStaticIP
      - Label:
          default: Remote access
        Parameters:
          - ingressIPv4
          - ingressIPv6
      - Label:
          default: EBS volume
        Parameters:
          - volumeSize
          - volumeType

    ParameterLabels:
      ec2Name:
        default: "EC2 instance name"
      processorArchitecture:
        default: "OS version and processor architecture"
      instanceType:
        default: "Instance type (x86_64 or arm64)"

      vpcID:
        default: "VPC with outbound internet connectivity"
      subnetID:
        default: "Subnet with outbound internet connectivity"
      displayPublicIP:
        default: "EC2 in public subnet with public IP assigned?"
      assignStaticIP:
        default: "Elastic IP: assign static public internet IPv4 address"

      ingressIPv4:
        default: "Allowed source prefix (IPv4)"
      ingressIPv6:
        default: "Allowed source prefix (IPv6)"

      volumeSize:
        default: "Volume size (GiB)"
      volumeType:
        default: "Volume type"

Parameters:
  ec2Name:
    Description: EC2 instance name
    Type: String
    Default: AL2 with Former2
  processorArchitecture:
    Type: String
    Description: Processor architecture
    AllowedValues:
      - Amazon Linux 2 (arm64)
      - Amazon Linux 2 (x86_64)
    Default: Amazon Linux 2 (arm64)
  instanceType:
    Type: String
    Description: https://console.aws.amazon.com/ec2/#InstanceTypes
    AllowedPattern: "^[a-z\\-\\d\\.]+$"
    Default: t4g.xlarge

  vpcID:
    Type: AWS::EC2::VPC::Id
    Description: "https://console.aws.amazon.com/vpcconsole/home#vpcs:"
    AllowedPattern: .+
    ConstraintDescription: Select a VPC
  subnetID:
    Type: AWS::EC2::Subnet::Id
    Description: "https://console.aws.amazon.com/vpcconsole/home#subnets:"
    AllowedPattern: .+
    ConstraintDescription: Select a Subnet
  displayPublicIP:
    Type: String
    Description: Select No if EC2 has no public IP
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"
  assignStaticIP:
    Type: String
    Description: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"

  ingressIPv4:
    Type: String
    Description: e.g. 1.2.3.4/32, get your internet IPv4 address from https://checkip.amazonaws.com
    AllowedPattern: "^\\d+\\.\\d+\\.\\d+\\.\\d+\\/\\d+$"
    ConstraintDescription: Specify valid IPv4 prefix
    Default: 0.0.0.0/0
  ingressIPv6:
    Type: String
    Description: e.g. 1:2:3:4::/64, get your internet IPv6 address (if any) with tools such as https://ifconfig.co
    AllowedPattern: .+
    ConstraintDescription: Specify valid IPv6 prefix
    Default: ::/0

  volumeSize:
    Type: Number
    Description: https://docs.aws.amazon.com/ebs/latest/userguide/volume_constraints.html
    MinValue: 10
    MaxValue: 16384
    Default: 10
  volumeType:
    Type: String
    Description: https://docs.aws.amazon.com/ebs/latest/userguide/ebs-volume-types.html
    AllowedValues:
      - gp3
      - gp2
    Default: gp3

Conditions:
  useARM64: !Equals [!Ref processorArchitecture, "Amazon Linux 2 (arm64)"]
  useElasticIP: !Equals [!Ref assignStaticIP, "Yes"]
  displayPublicIP: !Equals [!Ref displayPublicIP, "Yes"]
  hasEIC:
    !Not [
      !Equals [
        !FindInMap [
          EICprefixMap,
          !Ref AWS::Region,
          IpPrefix,
          DefaultValue: 127.0.0.1/32,
        ],
        127.0.0.1/32,
      ],
    ]
  createSgEIC: !And [!Condition hasEIC, !Condition displayPublicIP]

Mappings:
  EICprefixMap: # EC2 instance connect: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-connect-prerequisites.html#ec2-instance-connect-setup-security-group
    af-south-1:
      IpPrefix: 13.244.121.196/30
      Ipv6Prefix: 2406:da11:700:3b00::/56
    ap-east-1:
      IpPrefix: 43.198.192.104/29
      Ipv6Prefix: 2406:da1e:da1:3c00::/56
    ap-northeast-1:
      IpPrefix: 3.112.23.0/29
      Ipv6Prefix: 2406:da14:1c18:2100::/56
    ap-northeast-2:
      IpPrefix: 13.209.1.56/29
      Ipv6Prefix: 2406:da12:1e1:d900::/56
    ap-northeast-3:
      IpPrefix: 15.168.105.160/29
      Ipv6Prefix: 2406:da16:856:a500::/56
    ap-south-1:
      IpPrefix: 13.233.177.0/29
      Ipv6Prefix: 2406:da1a:74a:4b00::/56
    ap-south-2:
      IpPrefix: 18.60.252.248/29
      Ipv6Prefix: 2406:da1b:d1d:8800::/56
    ap-southeast-1:
      IpPrefix: 3.0.5.32/29
      Ipv6Prefix: 2406:da18:752:6600::/56
    ap-southeast-2:
      IpPrefix: 13.239.158.0/29
      Ipv6Prefix: 2406:da1c:90e:4a00::/56
    ap-southeast-3:
      IpPrefix: 43.218.193.64/29
      Ipv6Prefix: 2406:da19:14b:8c00::/56
    ap-southeast-4:
      IpPrefix: 16.50.248.80/29
      Ipv6Prefix: 2406:da1f:b4f:4600::/56
    ap-southeast-5:
      IpPrefix: 43.216.87.48/29
      Ipv6Prefix: 2406:da10:84f9:9e00::/56
    ap-southeast-7:
      IpPrefix: 43.209.155.96/29
      Ipv6Prefix: 2406:da14:85c5:5b00::/56
    ca-central-1:
      IpPrefix: 35.183.92.176/29
      Ipv6Prefix: 2600:1f11:ae3:700::/56
    ca-west-1:
      IpPrefix: 40.176.213.168/29
      Ipv6Prefix: 2600:1f1a:4ff6:d500::/56
    cn-north-1:
      IpPrefix: 43.196.20.40/29
      Ipv6Prefix: 2400:7fc0:86fd:e00::/56
    cn-northwest-1:
      IpPrefix: 43.192.155.8/29
      Ipv6Prefix: 2404:c2c0:87aa:4800::/56
    eu-central-1:
      IpPrefix: 3.120.181.40/29
      Ipv6Prefix: 2a05:d014:17a8:8b00::/56
    eu-central-2:
      IpPrefix: 16.63.77.8/29
      Ipv6Prefix: 2a05:d019:1d6:2100::/56
    eu-north-1:
      IpPrefix: 13.48.4.200/30
      Ipv6Prefix: 2a05:d016:494:f00::/56
    eu-south-1:
      IpPrefix: 15.161.135.164/30
      Ipv6Prefix: 2a05:d01a:c03:4a00::/56
    eu-south-2:
      IpPrefix: 18.101.90.48/29
      Ipv6Prefix: 2a05:d011:cbe:f700::/56
    eu-west-1:
      IpPrefix: 18.202.216.48/29
      Ipv6Prefix: 2a05:d018:403:4e00::/56
    eu-west-2:
      IpPrefix: 3.8.37.24/29
      Ipv6Prefix: 2a05:d01c:4ac:3100::/56
    eu-west-3:
      IpPrefix: 35.180.112.80/29
      Ipv6Prefix: 2a05:d012:c9e:d600::/56
    il-central-1:
      IpPrefix: 51.16.183.224/29
      Ipv6Prefix: 2a05:d025:451:7d00::/56
    me-central-1:
      IpPrefix: 3.29.147.40/29
      Ipv6Prefix: 2406:da17:1db:b00::/56
    me-south-1:
      IpPrefix: 16.24.46.56/29
      Ipv6Prefix: 2a05:d01e:27f:ac00::/56
    sa-east-1:
      IpPrefix: 18.228.70.32/29
      Ipv6Prefix: 2600:1f1e:d1d:e700::/56
    us-east-1:
      IpPrefix: 18.206.107.24/29
      Ipv6Prefix: 2600:1f18:6fe3:8c00::/56
    us-east-2:
      IpPrefix: 3.16.146.0/29
      Ipv6Prefix: 2600:1f16:138f:cf00::/56
    us-gov-east-1:
      IpPrefix: 18.252.4.0/30
      Ipv6Prefix: 2600:1f15:d63:bd00::/56
    us-gov-west-1:
      IpPrefix: 15.200.28.80/30
      Ipv6Prefix: 2600:1f12:fa9:5100::/56
    us-west-1:
      IpPrefix: 13.52.6.112/29
      Ipv6Prefix: 2600:1f1c:12d:e900::/56
    us-west-2:
      IpPrefix: 18.237.140.160/29
      Ipv6Prefix: 2600:1f13:a0d:a700::/56

  ConsoleUrl:
    aws:
      url: console.aws.amazon.com
    aws-cn:
      url: console.amazonaws.cn
    aws-gov:
      url: console.amazonaws-us-gov.com

Resources:
  instanceIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: [sts:AssumeRole]
      Path: /
      Policies:
        - PolicyName: dcvLicensing
          PolicyDocument: # https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-license.html
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub arn:aws:s3:::dcv-license.${AWS::Region}/*
        - PolicyName: DenyIfNotIPprefix
          PolicyDocument: # https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_examples_aws_deny-ip.html
            Version: "2012-10-17"
            Statement:
              - Effect: Deny
                Action: "*"
                Resource: "*"
                Condition:
                  NotIpAddress:
                    aws:SourceIp: 0.0.0.0/0
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/ReadOnlyAccess"
      Tags:
        - Key: StackName
          Value: !Ref AWS::StackName
        - Key: StackId
          Value: !Ref AWS::StackId
        - Key: GitHub
          Value: https://github.com/aws-samples/ec2-former2

  instanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref instanceIamRole

  securityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound DCV
      VpcId: !Ref vpcID
      SecurityGroupIngress:
        - !If
          - createSgEIC
          - Description: EC2 Instance Connect (IPv4)
            IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: !FindInMap [EICprefixMap, !Ref AWS::Region, IpPrefix]
          - !Ref AWS::NoValue
        - !If
          - createSgEIC
          - Description: EC2 Instance Connect (IPv6)
            IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIpv6: !FindInMap [EICprefixMap, !Ref AWS::Region, Ipv6Prefix]
          - !Ref AWS::NoValue
        - Description: DCV (IPv4)
          IpProtocol: tcp
          FromPort: 8443
          ToPort: 8443
          CidrIp: !Ref ingressIPv4
        - Description: DCV QUIC (IPv4)
          IpProtocol: udp
          FromPort: 8443
          ToPort: 8443
          CidrIp: !Ref ingressIPv4
        - Description: DCV (IPv6)
          IpProtocol: tcp
          FromPort: 8443
          ToPort: 8443
          CidrIpv6: !Ref ingressIPv6
        - Description: DCV QUIC (IPv6)
          IpProtocol: udp
          FromPort: 8443
          ToPort: 8443
          CidrIpv6: !Ref ingressIPv6
      SecurityGroupEgress:
        - Description: Allow all outbound traffic (IPv4)
          IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
        - Description: Allow all outbound traffic (IPv6)
          IpProtocol: "-1"
          CidrIpv6: ::/0
      Tags:
        - Key: StackName
          Value: !Ref AWS::StackName
        - Key: StackId
          Value: !Ref AWS::StackId
        - Key: Name
          Value: !Sub
            - "${AWS::StackName}-securityGroup-${UID}"
            - UID:
                !Select [
                  3,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ]
        - Key: GitHub
          Value: https://github.com/aws-samples/ec2-former2

  ec2Instance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT90M
    Metadata:
      Comment: Install Update files
      AWS::CloudFormation::Init:
        configSets:
          setup:
            - 00_setup
          dcv_install:
            - 00_dcv_install
        00_setup: # in the following order: packages, groups, users, sources, files, commands, and then services.
          files:
            "/var/www/THIRD_PARTY_LICENSES":
              content: |
                ** Former2; version 1.0 -- https://github.com/iann0036/former2
                MIT License

                Copyright (c) 2019 Ian Mckay

                Permission is hereby granted, free of charge, to any person obtaining a copy
                of this software and associated documentation files (the "Software"), to deal
                in the Software without restriction, including without limitation the rights
                to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                copies of the Software, and to permit persons to whom the Software is
                furnished to do so, subject to the following conditions:

                The above copyright notice and this permission notice shall be included in all
                copies or substantial portions of the Software.

                THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                SOFTWARE.

                MIT License

                Copyright (c) 2019 Ian Mckay

                Permission is hereby granted, free of charge, to any person obtaining a copy
                of this software and associated documentation files (the "Software"), to deal
                in the Software without restriction, including without limitation the rights
                to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
                copies of the Software, and to permit persons to whom the Software is
                furnished to do so, subject to the following conditions:

                The above copyright notice and this permission notice shall be included in all
                copies or substantial portions of the Software.

                THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
                FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
                AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
                OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
                SOFTWARE.
              mode: "000444"
              owner: "root"
              group: "root"
            "/home/ec2-user/update-former2":
              content: |
                #!/bin/bash
                cd /var/www/html
                sudo git pull
              mode: "000755"
              owner: "ec2-user"
              group: "users"
            "/home/ec2-user/update-dcv":
              content: |
                #!/bin/bash
                cd /tmp
                sudo rm -f /tmp/nice-dcv-amzn2-$(arch).tgz
                wget https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-amzn2-$(arch).tgz
                tar -xvzf nice-dcv-amzn2-$(arch).tgz && cd nice-dcv-*-amzn2-$(arch)
                sudo yum install -y ./nice-dcv-server-*.rpm
                sudo yum install -y ./nice-dcv-web-viewer-*.rpm
                sudo yum install -y ./nice-xdcv-*.rpm
                sudo systemctl daemon-reload
              mode: "000755"
              owner: "ec2-user"
              group: "ec2-user"
            "/home/ec2-user/update-awscli":
              content: |
                #!/bin/bash
                cd /tmp
                sudo rm -f /tmp/awscliv2.zip
                curl https://awscli.amazonaws.com/awscli-exe-linux-$(arch).zip -o awscliv2.zip
                unzip -q -o awscliv2.zip
                /usr/bin/aws --version
                sudo ./aws/install --update -b /usr/bin
                /usr/bin/aws --version
              mode: "000755"
              owner: "ec2-user"
              group: "ec2-user"
            "/home/ec2-user/get-iam-creds.sh":
              content: !Sub |
                #!/bin/bash
                TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 30"` && curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/iam/security-credentials/${instanceIamRole}

              mode: "000740"
              owner: "ec2-user"
              group: "ec2-user"
            "/etc/systemd/system/dcv-virtual-session.service":
              content: |
                [Unit]
                Description=Create DCV virtual session
                After=default.target network.target

                [Service]
                ExecStart=/opt/dcv-virtual-session.sh

                [Install]
                WantedBy=default.target
              mode: "000644"
              owner: "root"
              group: "root"
            "/opt/dcv-virtual-session.sh":
              content: |
                #!/bin/bash
                dcvUsers=( "ec2-user" )
                while true;
                do
                  for dcvUser in "${dcvUsers[@]}"
                  do
                    if (! /usr/bin/dcv list-sessions | grep -q $dcvUser); then
                      /usr/bin/dcv create-session $dcvUser --owner $dcvUser --storage-root %home% --type virtual
                    fi
                  done
                  date
                  /usr/bin/dcv list-sessions
                  sleep 5
                done
              mode: "000744"
              owner: "root"
              group: "root"
            "/etc/systemd/system/dcv-post-reboot.service":
              content: |
                [Unit]
                Description=Post install tasks
                After=default.target network.target

                [Service]
                ExecStart=/bin/sh -c "/opt/dcv-post-reboot.sh 2>&1 | tee -a /var/log/install-sw.log"

                [Install]
                WantedBy=default.target
              mode: "000644"
              owner: "root"
              group: "root"
            "/opt/dcv-post-reboot.sh":
              content: !Sub |
                #!/bin/bash
                #sysctl -w net.ipv6.conf.all.disable_ipv6=1
                #sysctl -w net.ipv6.conf.default.disable_ipv6=1

                /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ec2Instance --region ${AWS::Region}

                yum update -q -y

                #sysctl -w net.ipv6.conf.all.disable_ipv6=0
                #sysctl -w net.ipv6.conf.default.disable_ipv6=0

                systemctl enable dcv-virtual-session && systemctl restart dcv-virtual-session
                systemctl enable dcvserver && systemctl restart dcvserver

                rm -f /etc/systemd/system/dcv-post-reboot.service
                rm -f ${!0}
                systemctl daemon-reload
              mode: "000755"
              owner: "root"
              group: "root"
            "/root/install-sw.sh":
              content: !Sub |
                #!/bin/bash
                mkdir -p /tmp/cfn
                cd /tmp/cfn

                # EPEL: https://docs.fedoraproject.org/en-US/epel/
                amazon-linux-extras install -y epel

                # Update OS
                yum clean all
                yum update -q -y
                sleep 10
                pkill "^yum$"

                # yum-cron
                yum install -q -y yum-cron
                sed -i 's/apply_updates = no/apply_updates = yes/g' /etc/yum/yum-cron.conf
                systemctl enable yum-cron

                # USB and GPU driver DKMS
                yum install -q -y dkms
                systemctl enable dkms

                # Kernel headers for GPU and USB remotization
                yum install -q -y kernel-devel
                yum install -q -y usbutils

                # AWS CLI: https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
                yum remove -q -y awscli
                cd /tmp/cfn
                # AWS CLI v2: https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
                curl -s https://awscli.amazonaws.com/awscli-exe-linux-$(arch).zip -o awscliv2.zip
                unzip -q -o awscliv2.zip
                ./aws/install -b /usr/bin
                echo "export AWS_CLI_AUTO_PROMPT=on-partial" >> /home/ec2-user/.bashrc

                rm -f ${!0}
              mode: "000740"
              owner: "root"
              group: "root"
          commands:
            install:
              command: "/root/install-sw.sh >> /var/log/install-sw.log 2>&1"
              ignoreErrors: "true"
        00_dcv_install:
          files:
            "/root/install-dcv.sh":
              content: !Sub |
                #!/bin/bash
                mkdir -p /tmp/cfn
                cd /tmp/cfn

                # Update OS
                yum update -q -y

                # DCV prereq: https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-prereq.html
                yum install -q -y gdm gnome-session gnome-classic-session gnome-session-xsession
                yum install -q -y xorg-x11-server-Xorg xorg-x11-fonts-Type1 xorg-x11-drivers 
                yum install -q -y gnome-terminal gnu-free-fonts-common gnu-free-mono-fonts gnu-free-sans-fonts gnu-free-serif-fonts

                # Microphone redirection: https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-server.html
                yum install -q -y pulseaudio pulseaudio-utils
                amazon-linux-extras install -y firefox

                # Disable the Wayland protocol: https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-prereq.html#linux-prereq-wayland
                sed -i '/^\[daemon\]/a WaylandEnable=false' /etc/gdm/custom.conf

                # DCV: https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-server.html
                rpm --import https://d1uj6qtbmh3dt5.cloudfront.net/NICE-GPG-KEY
                curl -s -L -O https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-amzn2-$(arch).tgz
                tar -xvzf nice-dcv-amzn2-$(arch).tgz && cd nice-dcv-*-amzn2-$(arch)
                yum install -q -y ./nice-dcv-server-*.rpm
                yum install -q -y ./nice-dcv-web-viewer-*.rpm
                yum install -q -y ./nice-xdcv-*.rpm

                # Printer redirection: https://docs.aws.amazon.com/dcv/latest/adminguide/manage-printer.html
                yum install -q -y cups
                GROUP=$(cat /etc/cups/cups-files.conf | grep -oP "SystemGroup\s\K\w+")
                usermod -a -G $GROUP dcv
                systemctl enable cups

                # glxinfo : https://docs.aws.amazon.com/dcv/latest/adminguide/setting-up-installing-linux-prereq.html#linux-prereq-tools
                yum install -q -y glx-utils
                yum install -q -y vulkan clinfo

                # QUIC: https://docs.aws.amazon.com/dcv/latest/adminguide/enable-quic.html
                cp /etc/dcv/dcv.conf /etc/dcv/dcv.conf."`date +"%Y-%m-%d"`"
                sed -i "s/^#enable-quic-frontend=true/enable-quic-frontend=true/g" /etc/dcv/dcv.conf

                # Higher web client max resolution: https://docs.aws.amazon.com/dcv/latest/adminguide/config-param-ref.html
                sed -i "/^\[display/a web-client-max-head-resolution=(4096, 2160)" /etc/dcv/dcv.conf
                # Console session support
                sed -i "/^\[session-management\/automatic-console-session/a owner=\"ec2-user\"\nstorage-root=\"%home%\"" /etc/dcv/dcv.conf

                #
                systemctl daemon-reload
                systemctl enable dcv-virtual-session
                systemctl enable dcvserver

                # Firefox homepage
                cd /usr/lib64/firefox/browser/defaults/preferences/
                sed -i "s/https:\/\/amazonlinux.com/http:\/\/localhost/g" all-amazonlinux.js
                sed -i "s/https:\/\/aws.amazon.com/http:\/\/localhost/g" all-amazonlinux.js

              mode: "000740"
              owner: "root"
              group: "root"
          commands:
            install:
              command: "/root/install-dcv.sh > /var/log/install-dcv.log 2>&1"
              ignoreErrors: "true"
    Properties:
      ImageId:
        !If [
          useARM64,
          "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-arm64-gp2}}",
          "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2}}",
        ]
      InstanceType: !Ref instanceType
      IamInstanceProfile: !Ref instanceProfile
      SubnetId: !Ref subnetID
      Monitoring: true
      EbsOptimized: true
      SecurityGroupIds:
        - !Ref securityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: !Ref volumeType
            VolumeSize: !Ref volumeSize
            DeleteOnTermination: true
            Encrypted: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          mkdir -p /tmp/cfn
          cd /tmp/cfn

          # disable IPv6 during setup
          #sysctl -w net.ipv6.conf.all.disable_ipv6=1
          #sysctl -w net.ipv6.conf.default.disable_ipv6=1

          yum clean all
          yum update -q -y
          yum install -q -y deltarpm wget tmux unzip tar curl sed

          export CFN_INIT="/opt/aws/bin/cfn-init"

          $CFN_INIT -v --stack ${AWS::StackName} --resource ec2Instance --region ${AWS::Region} -c setup

          $CFN_INIT -v --stack ${AWS::StackName} --resource ec2Instance --region ${AWS::Region} -c dcv_install

          # Setup Former2 
          yum install -q -y httpd git
          cd /var/www/
          git clone https://github.com/iann0036/former2
          mv html html.bak
          mv former2 html
          systemctl enable httpd

          # Change permissions and ownership
          usermod -a -G apache ec2-user
          chown -R ec2-user:apache /var/www/html
          chmod -R 2775 /var/www/html
          find /var/www/html -type d -exec sudo chmod 2775 {} \;
          find /var/www/html -type f -exec sudo chmod 0664 {} \;

          # Update OS
          yum update -q -y

          # yum-cron            
          yum install -q -y yum-cron
          sed -i 's/apply_updates = no/apply_updates = yes/g' /etc/yum/yum-cron.conf
          systemctl enable yum-cron

          # 
          systemctl set-default multi-user.target
          systemctl daemon-reload
          systemctl enable dcv-post-reboot

          # enable back IPv6
          #sysctl -w net.ipv6.conf.all.disable_ipv6=0
          #sysctl -w net.ipv6.conf.default.disable_ipv6=0

          sleep 1 && reboot
      Tags:
        - Key: Name
          Value: !Ref ec2Name
        - Key: StackName
          Value: !Ref AWS::StackName
        - Key: StackId
          Value: !Ref AWS::StackId
        - Key: GitHub
          Value: https://github.com/aws-samples/ec2-former2

  elasticIP:
    Condition: useElasticIP
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      NetworkBorderGroup: !Ref AWS::Region
      InstanceId: !Ref ec2Instance
      Tags:
        - Key: StackName
          Value: !Ref AWS::StackName
        - Key: StackId
          Value: !Ref AWS::StackId
        - Key: Name
          Value: !Sub
            - "${AWS::StackName}-elasticIP-${UID}"
            - UID:
                !Select [
                  3,
                  !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId]]],
                ]
        - Key: GitHub
          Value: https://github.com/aws-samples/ec2-former2

Outputs:
  EC2console:
    Description: EC2 console
    Value: !Sub
      - "https://${AWS::Region}.${url}/ec2/home?region=${AWS::Region}#Instances:search=${ec2Instance}"
      - url:
          !FindInMap [
            ConsoleUrl,
            !Ref "AWS::Partition",
            url,
            DefaultValue: "console.aws.amazon.com",
          ]

  EC2instanceConnect:
    Condition: createSgEIC
    Description: EC2 Instance Connect
    Value: !Sub
      - "https://${AWS::Region}.${url}/ec2-instance-connect/ssh?connType=standard&instanceId=${ec2Instance}&osUser=ec2-user&sshPort=22#/"
      - url:
          !FindInMap [
            ConsoleUrl,
            !Ref "AWS::Partition",
            url,
            DefaultValue: "console.aws.amazon.com",
          ]

  EC2serialConsole:
    Description: EC2 Serial Console
    Value: !Sub
      - "https://${AWS::Region}.${url}/ec2-instance-connect/ssh?connType=serial&instanceId=${ec2Instance}&serialPort=0#/"
      - url:
          !FindInMap [
            ConsoleUrl,
            !Ref "AWS::Partition",
            url,
            DefaultValue: "console.aws.amazon.com",
          ]

  EC2iamRole:
    Description: EC2 IAM role
    Value: !Sub
      - "https://${url}/iam/home#/roles/details/${role}"
      - {
          role: !Select [1, !Split ["/", !GetAtt instanceIamRole.Arn]],
          url:
            !FindInMap [
              ConsoleUrl,
              !Ref "AWS::Partition",
              url,
              DefaultValue: "console.aws.amazon.com",
            ],
        }

  SSMsessionManager:
    Description: SSM Session Manager ("sudo passwd ec2-user" to change password)
    Value: !Sub
      - "https://${AWS::Region}.${url}/systems-manager/session-manager/${ec2Instance}"
      - url:
          !FindInMap [
            ConsoleUrl,
            !Ref "AWS::Partition",
            url,
            DefaultValue: "console.aws.amazon.com",
          ]

  DCVwebConsole:
    Description: DCV web browser client (login as ec2-user)
    Value: !Sub
      - "https://${IpAddress}:8443"
      - IpAddress:
          !If [
            displayPublicIP,
            !GetAtt ec2Instance.PublicIp,
            !GetAtt ec2Instance.PrivateIp,
          ]

  GetIAMcreds:
    Description: Command to retrieve IAM credentials for http://localhost/#section-setup-credentials
    Value: !Sub 'TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 30"` && curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/iam/security-credentials/${instanceIamRole}'
